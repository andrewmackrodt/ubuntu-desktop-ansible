---
- name: "Install extension {{ name }} package dependencies"
  become: yes
  ansible.builtin.apt: pkg="{{ packages }}" state=present cache_valid_time=3600
  when: packages | length > 0

- name: "{{ enable | mapaction | title }} extension {{ name }}"
  check_mode: no
  args: { executable: /bin/bash }
  ansible.builtin.shell: |-
    set -e
    state=$(gnome-extensions info "{{ name }}" | awk '$1 ~ /State/ { print $2 }')
    [[ ! "$state" =~ {{ enable | mapstate }} ]] || exit 0
    echo "ansible_changed=yes"
    [[ "{{ ansible_check_mode }}" != "True" ]] || exit 0
    gnome-extensions {{ enable | mapaction }} "{{ name }}"
  register: res
  changed_when: res.stdout is search("ansible_changed=yes")

- name: Configure extension {{ name }}
  check_mode: no
  args: { executable: /bin/bash }
  ansible.builtin.shell: |-
    set -e
    key="{{ namespace }}/{{ item.key }}"
    val=$(dconf read "$key")
    [[ "$val" != "{{ item.value }}" ]] || exit 0
    echo "ansible_changed=yes"
    [[ "{{ ansible_check_mode }}" != "True" ]] || exit 0
    dconf write "$key" "{{ item.value }}"
  notify:
    - reload gnome-shell
  with_items: "{{ settings }}"
  register: res
  changed_when: res.stdout is search("ansible_changed=yes")
