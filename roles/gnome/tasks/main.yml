---
- name: Set x11 keymap {{ gnome_input_source }}
  check_mode: no
  become: yes
  args: { executable: /bin/bash }
  ansible.builtin.shell: |-
    set -e
    keymap=$(localectl | awk '$0 ~ /X11 Layout/ { print $3 }')
    [[ "$keymap" != "{{ gnome_input_source }}" ]] || exit 0
    echo "ansible_changed=yes"
    [[ "{{ ansible_check_mode }}" != "True" ]] || exit 0
    localectl --no-convert set-x11-keymap "{{ gnome_input_source }}"
  register: set_keymap
  changed_when: set_keymap.stdout is search("ansible_changed=yes")

- name: Map gnome input source
  ansible.builtin.set_fact:
    gnome_input_source_full: "{{ [('xkb', '{{ gnome_input_source }}')] | string }}"

- name: Set input source {{ gnome_input_source }}
  check_mode: no
  args: { executable: /bin/bash }
  ansible.builtin.shell: |-
    set -e
    key="/org/gnome/desktop/input-sources/sources"
    val=$(dconf read "$key")
    [[ "$val" != "{{ gnome_input_source_full | string }}" ]] || exit 0
    echo "ansible_changed=yes"
    [[ "{{ ansible_check_mode }}" != "True" ]] || exit 0
    dconf write "$key" "{{ gnome_input_source_full | string }}"
  register: res
  changed_when: res.stdout is search("ansible_changed=yes")

- name: Set locale {{ locale }}
  check_mode: no
  args: { executable: /bin/bash }
  ansible.builtin.shell: |-
    set -e
    val=$(dconf read /system/locale/region)
    [[ "$val" != "'{{ locale }}'" ]] || exit 0
    echo "ansible_changed=yes"
    [[ "{{ ansible_check_mode }}" != "True" ]] || exit 0
    dconf write /system/locale/region "'{{ locale }}'"
  notify:
    - reload gnome-shell
  register: res
  changed_when: res.stdout is search("ansible_changed=yes")

- ansible.builtin.include_tasks: terminal.yml

- ansible.builtin.include_tasks: nautilus.yml

- name: Update dock pinned apps
  ansible.builtin.include_role: name=pin-to-dock

- name: Create desktop wallpapers directory
  file: path="{{ ansible_user_dir }}/Pictures/Wallpapers" state=directory

- name: Download wallpapers
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    checksum: "sha256:{{ item.sha256 }}"
    dest: "{{ ansible_user_dir }}/Pictures/Wallpapers/{{ item.filename }}"
  with_items: "{{ gnome_wallpapers }}"

- name: Set gnome desktop
  check_mode: no
  args: { executable: /bin/bash }
  ansible.builtin.shell: |-
    set -e
    key="/org/gnome/desktop/{{ item[0] }}/{{ item[1].key }}"
    val=$(dconf read "$key")
    [[ "$val" != "{{ item[1].value }}" ]] || exit 0
    echo "ansible_changed=yes"
    [[ "{{ ansible_check_mode }}" != "True" ]] || exit 0
    dconf write "$key" "{{ item[1].value }}"
  with_nested:
    - [ 'background', 'screensaver' ]
    - "{{ gnome_background_defaults | combine(gnome_background | default({}), recursive=true) | dict2items }}"
  register: res
  changed_when: res.stdout is search("ansible_changed=yes")

- ansible.builtin.include_tasks: tweaks.yml

- name: Install papirus icon theme
  become: yes
  ansible.builtin.apt: pkg=papirus-icon-theme state=present cache_valid_time=3600

- name: Set gnome interface
  check_mode: no
  args: { executable: /bin/bash }
  ansible.builtin.shell: |-
    set -e
    key="/org/gnome/desktop/interface/{{ item.key }}"
    val=$(dconf read "$key")
    [[ "$val" != "{{ item.value }}" ]] || exit 0
    echo "ansible_changed=yes"
    [[ "{{ ansible_check_mode }}" != "True" ]] || exit 0
    dconf write "$key" "{{ item.value }}"
  with_items:
    - "{{ gnome_interface_defaults | combine(gnome_interface | default({}), recursive=true) | dict2items }}"
  register: res
  changed_when: res.stdout is search("ansible_changed=yes")

- ansible.builtin.include_tasks: extensions.yml

- name: Install webp image preview support
  become: yes
  ansible.builtin.apt: pkg=webp-pixbuf-loader state=present cache_valid_time=3600
